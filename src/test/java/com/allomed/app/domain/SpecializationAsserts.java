package com.allomed.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SpecializationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpecializationAllPropertiesEquals(Specialization expected, Specialization actual) {
        assertSpecializationAutoGeneratedPropertiesEquals(expected, actual);
        assertSpecializationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpecializationAllUpdatablePropertiesEquals(Specialization expected, Specialization actual) {
        assertSpecializationUpdatableFieldsEquals(expected, actual);
        assertSpecializationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpecializationAutoGeneratedPropertiesEquals(Specialization expected, Specialization actual) {
        assertThat(actual)
            .as("Verify Specialization auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpecializationUpdatableFieldsEquals(Specialization expected, Specialization actual) {
        assertThat(actual)
            .as("Verify Specialization relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpecializationUpdatableRelationshipsEquals(Specialization expected, Specialization actual) {
        assertThat(actual)
            .as("Verify Specialization relationships")
            .satisfies(a -> assertThat(a.getDoctorProfiles()).as("check doctorProfiles").isEqualTo(expected.getDoctorProfiles()));
    }
}
